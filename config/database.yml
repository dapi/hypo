# PostgreSQL. Versions 9.3 and up are supported.
#
# Install the pg driver:
#   gem install pg
# On macOS with Homebrew:
#   gem install pg -- --with-pg-config=/usr/local/bin/pg_config
# On Windows:
#   gem install pg
#       Choose the win32 build.
#       Install PostgreSQL and put its /bin directory on your path.
#
# Configure Using Gemfile
# gem "pg"
#
_default: &_default
  adapter: postgresql
  encoding: unicode
  # schema_search_path: "public"
  # Minimum log levels, in increasing order:
  #   debug5, debug4, debug3, debug2, debug1,
  #   log, notice, warning, error, fatal, and panic
  # Defaults to warning.
  #min_messages: notice
  # For details on connection pooling, see Rails configuration guide
  # https://guides.rubyonrails.org/configuring.html#database-pooling
  pool: <%= (defined?(Sidekiq) && Sidekiq.server?) ? Sidekiq.instance_variable_get('@config').concurrency : (ENV.fetch('RAILS_MAX_THREADS') { 5 }.to_i * ENV.fetch('WEB_CONCURRENCY') { 1 }.to_i) %>
  <% if ENV.key?('DATABASE_HOST') %>
  host: <%= ENV.fetch('DATABASE_HOST') %>
  <% end %>
  <% if ENV.key?('DATABASE_USERNAME') %>
  username: <%= ENV['DATABASE_USERNAME'] %>
  <% end %>
  <% if ENV.key?('DATABASE_PASSWORD') %>
  password: <%= ENV["DATABASE_PASSWORD"] %>
  <% end %>

_primary: &_primary
  <<: *_default
  url: <%= ENV.fetch( "PRIMARY_DATABASE_URL", ENV['DATABASE_URL'] ) %>

_tenant: &_tenant
  <<: *_default
  migrations_paths: 'db/tenant_migrate'
  url: <%= ENV.fetch( "TENANT_DATABASE_URL", ENV['DATABASE_URL'] ) %>

development:
  primary:
    <<: *_primary
    database: vilna_primary_development
  tenant:
    <<: *_tenant
    database: vilna_tenant_development

# Warning: The database defined as "test" will be erased and
# re-generated from your development database when you run "rake".
# Do not set this db to the same as development or production.
test:
  primary:
    <<: *_primary
    database: vilna_primary_test
  tenant:
    <<: *_tenant
    database: vilna_tenant_test

production:
  primary: &primary_production
    <<: *_primary
    database: <%= ENV.fetch( 'DATABASE_PRIMARY_NAME', 'vilna_primary_production' ) %>
  tenant:
    <<: *_tenant
    database: <%= ENV.fetch( 'DATABASE_TENANT_NAME', 'vilta_tenant_production' ) %>
  cache:
    <<: *primary_production
    database: vilna_production_cache
    migrations_paths: db/cache_migrate
  queue:
    <<: *primary_production
    database: vilna_production_queue
    migrations_paths: db/queue_migrate
  cable:
    <<: *primary_production
    database: vilna_production_cable
    migrations_paths: db/cable_migrate
